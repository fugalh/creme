#! /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby
require 'rbconfig'
# Crème Rappel
# Hans Fugal
# GPL2

## Customization
SPEAK=true
GROWL=true
GROWLNOTIFY=`which growlnotify`.strip
# Set the icon to use See growlnotify(1)
if File.exist?('applet.icns')
  # If we're running in the application bundle...
  GROWL_ICON=%w(-I ../..)
else
  fn = File.join(Config::CONFIG['datadir'], 'creme', 'Crystal_Clear_app_bell.png')
  if File.exist?(fn)
    # expect it in datadir
    GROWL_ICON=['--image', fn]
  else
    # borrow iCal's icon
    GROWL_ICON=%w(-a iCal.app)
  end
end
GROWL_NAME='Crème Rappel'
SHOW_TIME=false  # show the time specification in the growl notification
#SAY_VOICE='Zarvox'
##

DEBUG=false

require 'at_time'

def usage
  puts <<-EOF
usage: #{$0} [time [message]]

If message or both are not specified, they are expected on stdin. If neither is
specified, multiple time message pairs are accepted on stdin.
  EOF

  exit 0
end

def growl(timespec, msg)
  time = AtTime.parse_timespec(timespec)
  puts "Sleeping #{(time - Time.now).round} seconds" if DEBUG
  pid = fork do
    # close stdout/stderr for the benefit of the applescript subshell
    $stderr.close
    $stdout.close

    while time - Time.now > 0
      sleep 1
    end

    if SPEAK
      fork do
        ary = []
        ary += %W(-v #{SAY_VOICE}) rescue nil
        ary += [msg]
        exec 'say', *ary
      end
    end

    if GROWL
      fork do
        msg += " (#{time.iso8601})" if SHOW_TIME
        ary = %W(-s -n #{GROWL_NAME})
        ary += GROWL_ICON if GROWL_ICON
        ary += %W(-m #{msg})
        puts ary.inspect if DEBUG
        exec GROWLNOTIFY, *ary
      end
    end
  end
  puts "#{time} (#{pid})"
  Process.detach(pid)
end


usage if ARGV[0] == '-h' or ARGV[0] == '--help'
if GROWLNOTIFY == ""
  puts "I didn't find growlnotify. Make sure it is in your PATH."
  exit 1
end

case ARGV.size
when 0
  # No arguments, accept jobs on stdin
  STDIN.each_line do |l|
    time, msg = l.split(" ",2)
    growl(time, msg)
  end
when 1
  # One argument (time), read text on stdin
  growl(ARGV[0], STDIN.read)
else
  # 2+ arguments
  growl(ARGV[0], ARGV[1..-1].join(" "))
end


# Copyright (C) 2008  Hans Fugal
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
